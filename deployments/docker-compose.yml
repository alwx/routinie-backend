version: '2'

services:
  nginx-proxy:
    restart: always
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./letsencrypt/htpasswd:/etc/nginx/htpasswd"
      - "./letsencrypt/vhost:/etc/nginx/vhost.d"
      - "./letsencrypt/html:/usr/share/nginx/html"
      - "./letsencrypt/certs:/etc/nginx/certs"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"

  letsencrypt-nginx-proxy-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    volumes_from:
      - "nginx-proxy"

  routinie-backend:
    restart: always
    image: alwxdev/routinie-backend:latest
    depends_on:
      - db-service
      - redis-service
    ports:
      - "8001:8001"
    environment:
      - ROUTINIE_ENVIRONMENT=production
      - BASE_URL=https://go.routinie.com
      - VIRTUAL_HOST=go.routinie.com
      - LETSENCRYPT_HOST=go.routinie.com
      - LETSENCRYPT_EMAIL=support@routinie.com
      - VIRTUAL_PORT=8001

  routinie-frontend:
    restart: always
    image: alwxdev/routinie-frontend:latest
    ports:
      - "8002:8002"
    environment:
      - NODE_ENV=production
      - BASE_URL=https://routinie.com
      - VIRTUAL_HOST=routinie.com
      - LETSENCRYPT_HOST=routinie.com
      - LETSENCRYPT_EMAIL=support@routinie.com
      - VIRTUAL_PORT=8002

  db-service:
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ../routinie-db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: routinie-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: routinie-password

  redis-service:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
